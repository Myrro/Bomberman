/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bombermann;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
/**
 *
 * @author Myrro
 */
public class mainPanel extends javax.swing.JPanel implements Runnable,KeyListener{

    
    private int HEIGHT=660;
    private int WIDTH=660;
    private String pole[][];
    //private ArrayList grass;
    private ArrayList uwalls;
    private ArrayList dwalls;
    private ArrayList bombs;
    private final int time=1000;
    private final int fps=time/60;
    private Bomber bm;
    private Player pl;
    private Thread t=new Thread(this);
    private ImageIcon pic;
    private Background bck;
    /**
     * Creates new form mainPanel
     */
    
    public mainPanel() {
        
        this.addKeyListener(this);
        setSize(WIDTH,HEIGHT);
        setVisible(true);
        //grass=new ArrayList();
        uwalls=new ArrayList();
        dwalls=new ArrayList();
        bombs=new ArrayList();
        bm=new Bomber();
        pl=new Player();
        bck=new Background();
        pic=new ImageIcon("grx.png");
        initPosition();
        initMap();
        t.start();
        
        repaint();
        
        
    }
    
    @Override
    public void paintComponent(Graphics g){
    
        super.paintComponent(g);
        
        g.drawImage(bck.getImage(), bck.getX(), bck.getY(), this);
        for(int i=0;i<uwalls.size();i++){
        
            UWall uw=(UWall)uwalls.get(i);
            g.drawImage(uw.getImage(),uw.getX(),uw.getY(),this);
        }
        for(int i=0;i<dwalls.size();i++){
        
            DWall d=(DWall)dwalls.get(i);
            g.drawImage(d.getImage(),d.getX(),d.getY(),this);
        }
        for(int i=0;i<bombs.size();i++){
        
            Bomb b=(Bomb)bombs.get(i);
            g.drawImage(b.getImage(), b.getX(), b.getY(), this);
        }
        g.drawImage(bm.getImage(),bm.getX(),bm.getY(),this);
        g.drawImage(pl.getImage(),pl.getX(),pl.getY(),this);
    }
    
    private void initPosition(){
    
        pole=new String[11][];
        for(int i=0;i<11;i++){
        
            pole[i]=new String[11];
        }
        for(int i=0;i<11;i++){
        
            for(int j=0;j<11;j++){
            
                if(i%2==1 && j%2==1){
                
                    pole[i][j]="u";
                }
                else {
                    
                    if(i==0&&j==0||i==0&&j==1){
                    
                        pole[i][j]="g";
                    }
                    else if(i==1&&j==0){
                    
                        pole[i][j]="g";
                    }
                    else if(i==10&&j==10){
                    
                        pole[i][j]="g";
                    }
                    else if(i==10&&j==9){
                    
                        pole[i][j]="g";
                    }
                    else if(i==9&&j==10){
                    
                        pole[i][j]="g";
                    }
                    else
                        pole[i][j]="d";
                }
                
            }
        }
    }
    
    private void initMap(){
    
        for(int i=0;i<11;i++){
        
            for(int j=0;j<11;j++){
            
                if(pole[i][j].equals("u")){
                
                    UWall u=new UWall();
                    u.setX(j*60);
                    u.setY(i*60);
                    uwalls.add(u);
                }
                else if(pole[i][j].equals("g")){
                
                    Wall w=new Wall();
                    w.setX(j*60);
                    w.setY(i*60);
                    //grass.add(w);
                }
                else if(pole[i][j].equals("d")){
                
                    DWall d=new DWall();
                    d.setX(j*60);
                    d.setY(i*60);
                    dwalls.add(d);
                }
            }
        }
    }

    @Override
    public void run() {
        
        while(true){
        
            try {
                //System.out.println(a);
                t.sleep(fps);
            } catch (InterruptedException ex) {
                Logger.getLogger(mainPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            for(int i=0;i<bombs.size();i++){
            
                Bomb b=(Bomb)bombs.get(i);
                if(!b.isAlive()){
                
                    bombs.remove(i);
                }
            }
            repaint();
        }
    }
    int a=0;
    @Override
    public void keyTyped(KeyEvent ke) {
        
    }

    @Override
    public void keyPressed(KeyEvent ke) {
         
        boolean collided=false;
        if(ke.getKeyCode()==39){
        
            //right
            bm.setDirection(Bomber.RIGHT);
            if(bm.getX()+9<WIDTH-60){
            
                Rectangle r1=new Rectangle(bm.getX()+9,bm.getY(),60,60);
                for(int i=0;i<uwalls.size();i++){
                
                    UWall u=(UWall)uwalls.get(i);
                    Rectangle r2=new Rectangle(u.getX(),u.getY(),60,60);
                    if(r1.intersects(r2)){
                    
                        collided=true;
                        break;
                    }
                    if(i==uwalls.size() -1){
                    
                        collided=false;
                    }
                }
                if(collided==false){
                
                    for(int i=0;i<dwalls.size();i++){
                    
                        DWall d=(DWall)dwalls.get(i);
                        Rectangle r2=new Rectangle(d.getX(),d.getY(),60,60);
                        if(r1.intersects(r2)){
                        
                            break;
                        }
                        if(i==dwalls.size()-1){
                        
                            bm.move();
                        }
                    }
                }
            }
        }
        else if(ke.getKeyCode()==38){
        
            //up
            bm.setDirection(Bomber.UP);
            if(bm.getY()-9>0){
            
                Rectangle r1=new Rectangle(bm.getX(),bm.getY()-9,60,60);
                for(int i=0;i<uwalls.size();i++){
                
                    UWall u=(UWall)uwalls.get(i);
                    Rectangle r2=new Rectangle(u.getX(),u.getY(),60,60);
                    if(r1.intersects(r2)){
                    
                        collided=true;
                        break;
                    }
                    if(i==uwalls.size() -1){
                    
                        collided=false;
                    }
                }
                 if(collided==false){
                
                    for(int i=0;i<dwalls.size();i++){
                    
                        DWall d=(DWall)dwalls.get(i);
                        Rectangle r2=new Rectangle(d.getX(),d.getY(),60,60);
                        if(r1.intersects(r2)){
                        
                            break;
                        }
                        if(i==dwalls.size()-1){
                        
                            bm.move();
                        }
                    }
                }
            }
        }
        else if(ke.getKeyCode()==37){
        
            //left
            bm.setDirection(Bomber.LEFT);
            if(bm.getX()-9>0){
            
                Rectangle r1=new Rectangle(bm.getX()-9,bm.getY(),60,60);
                for(int i=0;i<uwalls.size();i++){
                
                    UWall u=(UWall)uwalls.get(i);
                    Rectangle r2=new Rectangle(u.getX(),u.getY(),60,60);
                    if(r1.intersects(r2)){
                    
                        collided=true;
                        break;
                    }
                    if(i==uwalls.size() -1){
                  
                        collided=false;
                    }
                }
                 if(collided==false){
                
                    for(int i=0;i<dwalls.size();i++){
                    
                        DWall d=(DWall)dwalls.get(i);
                        Rectangle r2=new Rectangle(d.getX(),d.getY(),60,60);
                        if(r1.intersects(r2)){
                        
                            break;
                        }
                        if(i==dwalls.size()-1){
                        
                            bm.move();
                        }
                    }
                }
            }
        }
        else if(ke.getKeyCode()==40){
        
            //down
            bm.setDirection(Bomber.DOWN);
            if(bm.getY()+9<HEIGHT-60){
            
                Rectangle r1=new Rectangle(bm.getX(),bm.getY()+9,60,60);
                for(int i=0;i<uwalls.size();i++){
                
                    UWall u=(UWall)uwalls.get(i);
                    Rectangle r2=new Rectangle(u.getX(),u.getY(),60,60);
                    if(r1.intersects(r2)){
                    
                        collided=true;
                        break;
                    }
                    if(i==uwalls.size() -1){
                    
                        collided=false;
                    }
                }
                 if(collided==false){
                
                    for(int i=0;i<dwalls.size();i++){
                    
                        DWall d=(DWall)dwalls.get(i);
                        Rectangle r2=new Rectangle(d.getX(),d.getY(),60,60);
                        if(r1.intersects(r2)){
                        
                            break;
                        }
                        if(i==dwalls.size()-1){
                        
                            bm.move();
                        }
                    }
                }
            }
        }
        else if(ke.getKeyCode()==32){
        
            if(bombs.isEmpty()){
            
                Bomb b=new Bomb();
                int cc=bm.getX()%60;
                int dd=bm.getY()%60;
                int ee=bm.getX()/60;
                int ff=bm.getY()/60;
                if(cc<30){
                
                    b.setX(ee*60);
                }
                else 
                    b.setX((ee+1)*60);
                if(dd<30){
                
                    b.setY(ff*60);
                }
                else 
                    b.setY((ff+1)*60);
               
                bombs.add(b);
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent ke) {
       
    }


    
    
}
