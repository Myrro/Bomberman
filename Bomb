/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bombermann;

import java.awt.Image;
import java.awt.Rectangle;
import java.io.Serializable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Myrro
 */
public class Bomb implements BombInterface,Runnable,Serializable{

    private int x;
    private int y;
    private ImageIcon pic;
    private final String filename;
    private boolean alive;
    private Thread t;
    private final int time=1000;
    private final int sleeper=time/60;
    private int no;
    private ImageIcon anim;
    private DWall wall;
    private Bomber bm;
    private Player pl;
    
    public Bomb(){
    
        filename="bomb.png";
        pic=new ImageIcon(filename);
        anim=new ImageIcon("anim.gif");
        alive=true;
        //no=0;
        t=new Thread(this);
        t.start();
    }
    
    @Override
    public int getX() {
        
        return x;
    }

    @Override
    public int getY() {
        
        return y;
    }

    @Override
    public boolean isAlive() {
        
        return alive;
    }

    @Override
    public void die() {
        
        alive=false;
    }

    @Override
    public Image getImage() {
        
        return pic.getImage();
    }

    @Override
    public void setX(int x) {
        
        this.x=x;
    }

    @Override
    public void setY(int y) {
        
        this.y=y;
    }

    @Override
    public void run() {
        
        no=0;
        while(true){
        
            try {
                
                t.sleep(sleeper);
                no++;
                if(no>180){
                
                    pic=anim;
                    if(bomberCollisionCheck()){
                    
                        //System.out.println("Player 1 died");
                        bm.die();
                    }
                    
                    if(playerCollisionCheck()){
                    
                        //System.out.println("Player 2 died");
                        pl.die();
                    }
                    if(wall!=null){
                    
                        wall.die();
                        wall.setX(0);
                        wall.setY(-61);
                    }
                }
                if(no==240){
                
                    die();
                    break;
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(Bomb.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void setImage(ImageIcon a) {
        
        pic=a;
    }
    
    public void setWall(DWall e){
    
        wall=e;
    }
    
    public DWall getWall(){
    
        return wall;
    }

    @Override
    public Rectangle getRectangled() {
        
        return (new Rectangle(getX(),getY(),60,60));
    }

    @Override
    public void setBomber(Bomber b) {
        
        bm=b;
    }

    @Override
    public void setPlayer(Player pl) {
        
        this.pl=pl;
    }

    @Override
    public boolean bomberCollisionCheck() {
        
        try{
        Rectangle r1=bm.getRectangled();
        Rectangle r2=getRectangled();
        if(r1.intersects(r2)){
        
            return true;
        }
        else return false;
        }
        catch(Exception e){
        
            return false;
        }
    }

    @Override
    public boolean playerCollisionCheck() {
        
        try{
        Rectangle r1=pl.getRectangled();
        Rectangle r2=getRectangled();
        if(r1.intersects(r2)){
        
            return true;
        }
        else return false;
        }
        catch(Exception e){
        
            return false;
        }
    }

    @Override
    public void setNo(int n) {
        
        no=n;
    }

    @Override
    public int getNo() {
        
        return no;
    }

   
    
}
